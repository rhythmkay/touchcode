# Makefile.in generated by automake 1.10.1 from Makefile.am.
# zzipwrap/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





VPATH = ../../zzipwrap
pkgdatadir = $(datadir)/zziplib
pkglibdir = $(libdir)/zziplib
pkgincludedir = $(includedir)/zziplib
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin10.2.0
host_triplet = i386-apple-darwin
target_triplet = i386-apple-darwin
noinst_PROGRAMS = zzipwrap$(EXEEXT)
subdir = zzipwrap
DIST_COMMON = $(pkgconfig_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(zzip_HEADERS)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_compile_check_sizeof.m4 \
	$(top_srcdir)/m4/ac_set_default_paths_system.m4 \
	$(top_srcdir)/m4/ac_sys_largefile_sensitive.m4 \
	$(top_srcdir)/m4/acx_restrict.m4 \
	$(top_srcdir)/m4/ax_cflags_gcc_option.m4 \
	$(top_srcdir)/m4/ax_cflags_no_writable_strings.m4 \
	$(top_srcdir)/m4/ax_cflags_strict_prototypes.m4 \
	$(top_srcdir)/m4/ax_cflags_warn_all.m4 \
	$(top_srcdir)/m4/ax_check_aligned_access_required.m4 \
	$(top_srcdir)/m4/ax_configure_args.m4 \
	$(top_srcdir)/m4/ax_create_pkgconfig_info.m4 \
	$(top_srcdir)/m4/ax_enable_builddir_uname.m4 \
	$(top_srcdir)/m4/ax_expand_prefix.m4 \
	$(top_srcdir)/m4/ax_maintainer_mode_auto_silent.m4 \
	$(top_srcdir)/m4/ax_not_enable_frame_pointer.m4 \
	$(top_srcdir)/m4/ax_pax_tar.m4 \
	$(top_srcdir)/m4/ax_prefix_config_h.m4 \
	$(top_srcdir)/m4/ax_set_version_info.m4 \
	$(top_srcdir)/m4/ax_spec_file.m4 \
	$(top_srcdir)/m4/ax_spec_package_version.m4 \
	$(top_srcdir)/m4/ax_warning_default_aclocaldir.m4 \
	$(top_srcdir)/m4/ax_warning_default_pkgconfig.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/patch_libtool_on_darwin_zsh_overquoting.m4 \
	$(top_srcdir)/m4/patch_libtool_sys_lib_search_path_spec.m4 \
	$(top_srcdir)/m4/patch_libtool_to_add_host_cc.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/uses/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(zzipdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libzzipwrap_la_DEPENDENCIES = ../zzip/libzzip.la
am_libzzipwrap_la_OBJECTS = wrap.lo
libzzipwrap_la_OBJECTS = $(am_libzzipwrap_la_OBJECTS)
libzzipwrap_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libzzipwrap_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(noinst_PROGRAMS)
zzipwrap_SOURCES = zzipwrap.c
zzipwrap_OBJECTS = zzipwrap.$(OBJEXT)
zzipwrap_DEPENDENCIES = libzzipwrap.la ../zzip/libzzip.la
zzipwrap_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(zzipwrap_LDFLAGS) \
	$(LDFLAGS) -o $@
depcomp = $(SHELL) $(top_srcdir)/uses/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libzzipwrap_la_SOURCES) zzipwrap.c
DIST_SOURCES = $(libzzipwrap_la_SOURCES) zzipwrap.c
pkgconfigHEADERS_INSTALL = $(INSTALL_HEADER)
zzipHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(pkgconfig_HEADERS) $(zzip_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Volumes/Users/schwa/Development/Source/Mercurial/public/touchcode/Experimental/TouchBook/Externals/zzip/zziplib/uses/missing --run aclocal-1.10
AMTAR = ${SHELL} /Volumes/Users/schwa/Development/Source/Mercurial/public/touchcode/Experimental/TouchBook/Externals/zzip/zziplib/uses/missing --run tar
AR = ar
AS = as
AUTOCONF = sleep 9 ; true || autoconf || skipped
AUTOHEADER = sleep 9 ; true || autoheader || skipped
AUTOMAKE = sleep 9 ; true || automake || skipped
AWK = awk
CC = /Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin/gcc-4.2
CCDEPMODE = depmode=gcc3
CFLAGS =  -arch i386 -pipe -Os -gdwarf-2 -isysroot /Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator3.2.sdk -D__IPHONE_OS_VERSION_MIN_REQUIRED=30000 -D_USE_MMAP  -fomit-frame-pointer -Wall -fno-writable-strings -Wwrite-strings -Wstrict-prototypes
CONFIG_FILES = 
CPP = /Developer/usr/bin/cpp-4.2
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H -I$(top_builddir) -I$(top_srcdir) # also for automake 1.4
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = dsymutil
DUMPBIN = link -dump -symbols
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GNUTAR = 
GREP = /usr/bin/grep
GTAR = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LARGEFILE_CFLAGS = 
LD = /Developer/usr/libexec/gcc/i686-apple-darwin10/4.2.1/ld
LDFLAGS = -arch i386 -isysroot /Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator3.2.sdk
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /Volumes/Users/schwa/Development/Source/Mercurial/public/touchcode/Experimental/TouchBook/Externals/zzip/zziplib/uses/missing --run makeinfo
MKDIR_P = ../../uses/install-sh -c -d
MKZIP = /usr/bin/zip
NM = link -dump -symbols
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = zziplib
PACKAGE_BUGREPORT = 
PACKAGE_NAME = zziplib
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 0.13.57
PATH_SEPARATOR = :
PAX = /bin/pax
PAX_TAR_CREATE = '/bin/pax' -w -f
PAX_TAR_EXTRACT = '/bin/pax' -r -f
PERL = /usr/bin/perl
PKG_CONFIG = no
PYTHON = /usr/bin/python
RANLIB = ranlib
RELEASE_INFO = -release 0
RESOLVES =  # 
SDL = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TAR = 
THREAD_SAFE = -thread-safe
VERSION = 0.13.57
#
VERSION_INFO = -version-info 13:57
XMLTO = :
ZIPTESTS = 
ZLIB_INCL = 
ZLIB_LDIR = 
ZLIB_VERSION = 1.2.3
ZZIPLIB_LDFLAGS = --export-dynamic
abs_builddir = /Volumes/Users/schwa/Development/Source/Mercurial/public/touchcode/Experimental/TouchBook/Externals/zzip/zziplib/Darwin_10.2.0_i386.d/zzipwrap
abs_srcdir = /Volumes/Users/schwa/Development/Source/Mercurial/public/touchcode/Experimental/TouchBook/Externals/zzip/zziplib/Darwin_10.2.0_i386.d/../zzipwrap
abs_top_builddir = /Volumes/Users/schwa/Development/Source/Mercurial/public/touchcode/Experimental/TouchBook/Externals/zzip/zziplib/Darwin_10.2.0_i386.d
abs_top_srcdir = /Volumes/Users/schwa/Development/Source/Mercurial/public/touchcode/Experimental/TouchBook/Externals/zzip/zziplib/Darwin_10.2.0_i386.d/..
ac_ct_CC = 
ac_ct_DUMPBIN = link -dump -symbols
aclocaldir = /Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin/../share/aclocal
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
ax_enable_builddir_sed = sed
bindir = ${exec_prefix}/bin
build = i386-apple-darwin10.2.0
build_alias = 
build_cpu = i386
build_os = darwin10.2.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datadir}/doc
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i386-apple-darwin
host_alias = i386-apple-darwin
host_cpu = i386
host_os = darwin
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /Volumes/Users/schwa/Development/Source/Mercurial/public/touchcode/Experimental/TouchBook/Externals/zzip/zziplib/uses/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/../uses/install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgconfig_libdir = ${libdir}/pkgconfig
pkgconfig_libfile = zziplib.pc

# ----------------------------------------------------------------------
pkgconfigdir = $(libdir)/pkgconfig
prefix = /Volumes/Users/schwa/Development/Source/Mercurial/public/touchcode/Experimental/TouchBook/Externals/zzip/Output
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${sysconfdir}/default
srcdir = ../../zzipwrap
sysconfdir = ${prefix}/etc
target = i386-apple-darwin
target_alias = 
target_cpu = i386
target_os = darwin
target_vendor = apple
top_build_prefix = ../
top_builddir = ..
top_srcdir = ../..
AUTOMAKE_OPTIONS = 1.4 foreign
AUTOTOOL_VERSION = autoconf-2.52 automake-1.5 libtool-1.4.2
DEFAULT_INCLUDES = # nothing - no default of -I. -I$(srcdir)
lib_LTLIBRARIES = libzzipwrap.la
zzipdir = ${includedir}/zzip
zzip_HEADERS = $(libzzipwrap_la_headers)
#
libzzipwrap_la_SOURCES = \
	wrap.c

libzzipwrap_la_headers = \
	wrap.h

libzzipwrap_la_LDFLAGS = --export-dynamic $(RELEASE_INFO) $(VERSION_INFO) \
		        $(THREAD_SAFE)

libzzipwrap_la_LIBADD = ../zzip/libzzip.la  #  -lz
WCC10_CLEAN = *.obj *.lk1 *.mk1 *.mk *.sym *.tgt
EXTRA_DIST = 
CLEANFILES = $(WCC10_CLEAN)  *.pc *.omf
zzipwrap_LDFLAGS = --export-dynamic
zzipwrap_LDADD = libzzipwrap.la  #  ../zzip/libzzip.la -lz
pkgconfig_HEADERS = zzipwrap.pc
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  zzipwrap/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  zzipwrap/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libzzipwrap.la: $(libzzipwrap_la_OBJECTS) $(libzzipwrap_la_DEPENDENCIES) 
	$(libzzipwrap_la_LINK) -rpath $(libdir) $(libzzipwrap_la_OBJECTS) $(libzzipwrap_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
zzipwrap$(EXEEXT): $(zzipwrap_OBJECTS) $(zzipwrap_DEPENDENCIES) 
	@rm -f zzipwrap$(EXEEXT)
	$(zzipwrap_LINK) $(zzipwrap_OBJECTS) $(zzipwrap_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/wrap.Plo
include ./$(DEPDIR)/zzipwrap.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkgconfigHEADERS: $(pkgconfig_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgconfigdir)" || $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)"
	@list='$(pkgconfig_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkgconfigHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgconfigdir)/$$f'"; \
	  $(pkgconfigHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgconfigdir)/$$f"; \
	done

uninstall-pkgconfigHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgconfigdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgconfigdir)/$$f"; \
	done
install-zzipHEADERS: $(zzip_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(zzipdir)" || $(MKDIR_P) "$(DESTDIR)$(zzipdir)"
	@list='$(zzip_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(zzipHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(zzipdir)/$$f'"; \
	  $(zzipHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(zzipdir)/$$f"; \
	done

uninstall-zzipHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(zzip_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(zzipdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(zzipdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(zzipdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-pkgconfigHEADERS install-zzipHEADERS

install-dvi: install-dvi-am

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-pkgconfigHEADERS \
	uninstall-zzipHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstPROGRAMS ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-pkgconfigHEADERS install-ps \
	install-ps-am install-strip install-zzipHEADERS installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLTLIBRARIES \
	uninstall-pkgconfigHEADERS uninstall-zzipHEADERS


../zzip/libzzip.la : ../../zzip/*.c
	(cd ../zzip && $(MAKE) `basename $@`)

zzipwrap.pc : Makefile
	@ echo "prefix=$(prefix)" >$@
	@ echo "libdir=$(libdir)" >>$@
	@ echo "includedir=$(includedir)" >>$@
	@ echo " " >>$@
	@ echo "Name: zzipwrap" >>$@
	@ echo "Version: $(VERSION)" >>$@
	@ echo "Description: Callback Wrappers for ZZipLib" >>$@
	echo 'Requires: zziplib' >>$@
	echo 'Libs: -L$${libdir} -lzzipwrap' >>$@
	echo 'Cflags: -I$${includedir}' >>$@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
